---
title: Events
---

<div id="notification"></div>

{{! --------------------------------------------------- }}

<h2>Event binding</h2>

{{! --------------------------------------------------- }}

<h3>jQuery event binding</h3>

{{! --------------------------------------------------- }}

<p>Bind events with jQuery with standard jQuery event methods <code>.on()</code>, <code>.off()</code>, and <code>.one()</code>.</p>

``` js
// jQuery
var $grid = $('.grid').isotope({...});

function onArrange() {
  console.log('arrange done');
}
// bind event listener
$grid.on( 'arrangeComplete', onArrange );
// un-bind event listener
$grid.off( 'arrangeComplete', onArrange );
// bind event listener to be triggered just once. note ONE not ON
$grid.one( 'arrangeComplete', function() {
  console.log('arrange done, just this one time');
});
```

<p>jQuery event listeners have an <code>event</code> argument, whereas vanilla JS listeners do not.</p>

``` js
// jQuery, has event argument
$grid.on( 'arrangeComplete', function( event, filteredItems ) {
  console.log( filteredItems.length );
});

// vanilla JS, no event argument
iso.on( 'arrangeComplete', function( filteredItems ) {
  console.log( filteredItems.length );
});
```

{{! --------------------------------------------------- }}

<h3>Vanilla JS event binding</h3>

<p>Bind events with vanilla JS with <a href="methods.html#on">.on()</a>, <a href="methods.html#off">.off()</a>, and <a href="methods.html#once">.once()</a> methods.</p>

```js
// vanilla JS
var iso = new Isotope( '.grid', {...});

function onArrange() {
  console.log('arrange done');
}
// bind event listener
iso.on( 'arrangeComplete', onArrange );
// un-bind event listener
iso.off( 'arrangeComplete', onArrange );
// bind event listener to be triggered just once
iso.once( 'arrangeComplete', function() {
  console.log('arrange done, just this one time');
});
```

{{! --------------------------------------------------- }}

<h2>Isotope events</h2>

{{! --------------------------------------------------- }}

<h3>arrangeComplete</h3>

<p>Triggered after <a href="methods.html#arrange-isotope"><code>.isotope({...})</code>/<code>arrange</code></a>, when all layout, hide, and reveal transitions have completed.</p>

``` js
// jQuery
$grid.on( 'arrangeComplete', function( event, filteredItems ) {...} )
// vanilla JS
iso.on( 'arrangeComplete', function( filteredItems ) {...} )
```

<p class="variable">
  <code class="variable__code">filteredItems</code>
  <span class="variable__type"><i>Array</i> of <i>Isotope.Item</i>s</span>
  <span class="variable__description">Items that are visible</span>
</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    $grid.on( 'arrangeComplete',
      function( event, filteredItems ) {
        console.log( 'Isotope arrange completed on ' +
          filteredItems.length + ' items' );
      }
    );
    ```
  </div>
  {{> arrange-complete}}
</div>

{{! --------------------------------------------------- }}

<h3>layoutComplete</h3>

<p>Triggered after a layout and all positioning transitions have completed.</p>


``` js
// jQuery
$grid.on( 'layoutComplete', function( event, laidOutItems ) {...} )
// vanilla JS
iso.on( 'layoutComplete', function( laidOutItems ) {...} )
```

<p class="variable">
  <code class="variable__code">laidOutItems</code>
  <span class="variable__type"><i>Array</i> of <i>Isotope.Item</i>s</span>
  <span class="variable__description">Items that were laid out</span>
</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    $grid.on( 'layoutComplete',
      function( event, laidOutItems ) {
        console.log( 'Isotope layout completed on ' +
          laidOutItems.length + ' items' );
      }
    );
    ```
  </div>
  {{> layout-complete}}
</div>

{{! --------------------------------------------------- }}

<h3>removeComplete</h3>

``` js
// jQuery
$grid.on( 'removeComplete', function( event, removedItems ) {...} )
// vanilla JS
iso.on( 'removeComplete', function( removedItems ) {...} )
```

<p>Triggered after an item element has been removed.</p>

<p class="variable">
  <code class="variable__code">removedItems</code>
  <span class="variable__type"><i>Array</i> of <i>Isotope.Item</i>s</span>
  <span class="variable__description">Items that were removed</span>
</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    $grid.on( 'removeComplete',
      function( event, removedItems ) {
        console.log( 'Removed ' + removedItems.length + ' items' );
      }
    );
    ```
  </div>
  {{> remove-complete}}
</div>
