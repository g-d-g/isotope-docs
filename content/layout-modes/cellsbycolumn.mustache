---
title: cellsByColumn
---

<p>A horizontal grid layout where items are centered inside each cell. The grid is defined by <code>columnWidth</code> and <code>rowHeight</code> options.</p>

<div class="big-demo">
  <div class="grid grid--horizontal grid--counting js-isotope"
    data-isotope-options='{ "layoutMode": "cellsByColumn", "cellsByColumn": { "columnWidth": 110, "rowHeight": 110 } }'>
    {{> grid-items}}
  </div>

  {{> edit-demo default="qAlEy" }}
</div>


<h2>Install</h2>

<p>This layout mode is not included in <a href="../isotope.pkgd.js">isotope.pkgd.js</a> and must be installed separately.</p>

<p><a href="https://raw.github.com/metafizzy/isotope-cells-by-column/master/cells-by-column.js">Download cells-by-column.js on GitHub</a>.</p>

<p>Install with Bower:</p>

``` bash
bower install isotope-cells-by-column
```

<p><a href="https://www.npmjs.com/package/isotope-cells-by-column">Install with npm</a>:</p>

``` bash
npm install isotope-cells-by-column
```

{{! --------------------------------------------------- }}

<h2>Options</h2>

{{! --------------------------------------------------- }}

<h3>rowHeight</h3>

<p>The height of a column of the vertical grid.</p>

<p>If <code>rowHeight</code> is not set, the outer height of the first element will be used.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    layoutMode: 'cellsByColumn',
    cellsByColumn: {
      columnWidth: 110,
      rowHeight: 110
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    <div class="grid grid--horizontal grid--counting js-isotope"
      data-isotope-options='{ "layoutMode": "cellsByColumn", "cellsByColumn": { "columnWidth": 110, "rowHeight": 110 } }'>
      {{> grid-items-fewer}}
    </div>

    {{> edit-demo default="qAlEy" }}
  </div>
</div>

<p>If set to an <i>Element</i> or Selector <i>String</i>, Isotope will use the height of that element. See <a href="options.html#element-sizing">Element sizing</a>. Setting <code>rowHeight</code> with element sizing is recommended if you are using media queries to change the size of items.</p>

<div class="duo example">
  <div class="duo__cell example__code">
    ``` js
    layoutMode: 'cellsByColumn',
    itemSelector: '.grid-item',
    percentPosition: true,
    cellsByColumn: {
      columnWidth: '.grid-sizer',
      rowHeight: '.grid-sizer'
    }
    ```

    ``` css
    .grid-item { height: 13%; }
    .grid-item--height2 { height: 23%; }
    /* isotope element option sizing */
    .grid-sizer {
      width: 110px;
      height: 25%;
    }
    ```
  </div>
  <div class="duo__cell example__demo">
    <div class="grid grid--horizontal grid--counting grid--cells-by-column-element-sizing js-isotope"
      data-isotope-options='{ "layoutMode": "cellsByColumn", "itemSelector": ".grid-item", "cellsByColumn": { "columnWidth": ".grid-sizer", "rowHeight": ".grid-sizer" } }'>
      <div class="grid-sizer"></div>
      {{> grid-items-fewer}}
    </div>

    {{> edit-demo default="qfatn" }}
  </div>
</div>

{{! --------------------------------------------------- }}

<h3>columnWidth</h3>

<p>The width of a column of the horizontal grid.</p>

<p>If set to an <i>Element</i> or Selector <i>String</i>, Isotope will use the width of that element. See <a href="options.html#element-sizing">Element sizing</a>. Setting <code>columnWidth</code> with element sizing is recommended if you are using percentage widths or media queries to change the size of items.</p>

<p>If <code>columnWidth</code> is not set, the outer width of the first element will be used.</p>

<p>See examples above.</p>
