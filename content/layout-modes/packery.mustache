---
title: packery
---

<p>The packery layout mode uses a bin-packing algorithm. This is a fancy way of saying “it fills empty gaps.”</p>

<p><a href="http://packery.metafizzy.co">Packery</a> is available as a stand-alone layout library. See also: <a href="../faq.html#difference-between-isotope-masonry-and-packery">What is the difference between Isotope, Masonry, and Packery?</a></p>

<div class="demo">
  <div class="isotope js-isotope is-varying-sizes rainbowed" data-isotope-options='{ "layoutMode": "packery" }'>
    {{>feature-layout-mode-demo-items}}
  </div>
  <p class="edit"><a href="http://codepen.io/desandro/pen/vdwmb">Edit this example on CodePen</a></p>
</div>


<h2>Install</h2>

<p>This layout mode is not included in <a href="../isotope.pkgd.js">isotope.pkgd.js</a> and must be installed separately.</p>

<p>Download a packaged source file for packery layout mode:</p>

<ul>
  <li><a href="https://raw.githubusercontent.com/metafizzy/isotope-packery/master/packery-mode.pkgd.js">packery-mode.pkgd.js</a></li>
  <li><a href="https://raw.githubusercontent.com/metafizzy/isotope-packery/master/packery-mode.pkgd.min.js">packery-mode.pkgd.min.js</a></li>
</ul>

<p>Install with Bower:</p>

``` bash
bower install isotope-packery
```

<p><a href="https://www.npmjs.org/package/isotope-packery">Install with npm</a>:</p>

``` bash
npm install isotope-packery
```


<h2>Stamp</h2>

<p>Packery layout can <a href="../options.html#stamp">stamp</a> items in place. Packery will layout item elements <em>around</em> stamped elements &mdash; even above, unlike Masonry.</p>

<div class="row example">
  <div class="cell example-code">
``` js
layoutMode: 'packery',
itemSelector: '.mini-item',
stamp: '.stamp'
```
  </div>
  <div class="cell demo">
    <div id="packery-stamp-opt-demo" class="isotope has-stamp js-isotope" data-isotope-options='{ "layoutMode": "packery", "itemSelector": ".mini-item", "stamp": ".stamp" }'>
      <div class="stamp stamp1"></div>
      {{>mini-demo-items}}
    </div>
    <p class="edit"><a href="http://codepen.io/desandro/pen/Ccnmi">Edit this example on CodePen</a></p>
  </div>
</div>


<h1>Options</h1>


<h2>columnWidth</h2>

<div class="param">
  <p class="param-bit type">
    <b>Type:</b>
    <span class="value"><i>Number</i>, <i>Element</i>, or Selector <i>String</i></span>
  </p>
</div>

<p>Aligns items to the width of a column of a horizontal grid.</p>

<p>Unlike <a href="masonry.html">masonry layout</a>, packery layout does not require <code>columnWidth</code>.</p>

<div class="row example">
  <div class="cell example-code">
``` js
layoutMode: 'packery',
packery: {
  columnWidth: 60
}
```
  </div>
  <div class="cell demo">
    <div class="isotope js-isotope" data-isotope-options='{ "layoutMode": "packery", "packery": { "columnWidth": 60 } }'>
      {{>mini-demo-items}}
    </div>
    <p class="edit"><a href="http://codepen.io/desandro/pen/EoBqg">Edit this example on CodePen</a></p>
  </div>
</div>

<p>If set to an <i>Element</i> or Selector <i>String</i>, Isotope will use the width of that element. See <a href="../options.html#element-sizing">Element sizing</a>. Setting <code>columnWidth</code> with element sizing is recommended if you are using percentage widths.</p>

<div class="row example">
  <div class="cell example-code">
``` html
<div class="flex-5-col">
  <div class="grid-sizer"></div>
  <div class="mini-item"></div>
  <div class="mini-item"></div>
  ...
</div>
```
``` css
.flex-5-col .grid-sizer,
.flex-5-col .mini-item { width: 20%; }
.flex-5-col .mini-item.w2 { width: 40%; }
```
``` js
layoutMode: 'packery',
packery: {
  columnWidth: '.grid-sizer'
},
itemSelector: '.mini-item'
```
  </div>
  <div class="cell demo">
    <div class="isotope js-isotope flex-5-col" data-isotope-options='{ "layoutMode": "packery", "packery": { "columnWidth": ".grid-sizer" }, "itemSelector": ".mini-item" }'>
      <div class="grid-sizer"></div>
      {{>mini-demo-items}}
    </div>
    <p class="edit"><a href="http://codepen.io/desandro/pen/DbciA">Edit this example on CodePen</a></p>
  </div>
</div>


  
<h2>gutter</h2>

<div class="param">
  <p class="param-bit type">
    <b>Type:</b>
    <span class="value"><i>Number</i>, <i>Element</i>, or Selector <i>String</i></span>
  </p>
</div>

<p>The space between item elements, both vertically and horizontally.</p>

<div class="row example">
  <div class="cell example-code">
``` js
packery: {
  gutter: 10
}
```
``` css
.packery-gutter .mini-item.w2 {
  width: 110px;
}
.packery-gutter .mini-item.h2 {
  height: 110px;
}
```
  </div>
  <div class="cell demo packery-gutter">
    <div class="isotope js-isotope" data-isotope-options='{ "layoutMode": "packery", "packery": { "gutter": 10 } }'>
      {{>mini-demo-items}}
    </div>
    <p class="edit"><a href="http://codepen.io/desandro/pen/LBCwy">Edit this example on CodePen</a></p>
  </div>
</div>

<p>If set to an <i>Element</i> or Selector <i>String</i>, Isotope will use the width of that element. See <a href="../options.html#element-sizing">Element sizing</a>.</p>

<div class="row example">
  <div class="cell example-code">
``` html
<div class="flex-4-col-gutter">
  <div class="grid-sizer"></div>
  <div class="gutter-sizer"></div>
  <div class="mini-item"></div>
  <div class="mini-item"></div>
  ...
</div>
```
``` css
.flex-4-col-gutter .grid-sizer,
.flex-4-col-gutter .mini-item { width: 22%; }
.flex-4-col-gutter .mini-item.w2 { width: 48%; }
.flex-4-col-gutter .gutter-sizer { width: 4%; }
```
``` js
layoutMode: 'packery',
packery: {
  gutter: '.gutter-sizer'
},
itemSelector: '.mini-item'
```
  </div>
  <div class="cell demo">
    <div class="isotope js-isotope flex-4-col-gutter" data-isotope-options='{ "layoutMode": "packery", "itemSelector": ".mini-item", "packery": { "gutter": ".gutter-sizer" } }'>
      <div class="grid-sizer"></div>
      <div class="gutter-sizer"></div>
      {{>mini-demo-items}}
    </div>
    <p class="edit"><a href="http://codepen.io/desandro/pen/fGrKe">Edit this example on CodePen</a></p>
  </div>
</div>

  

<h2>isHorizontal</h2>

<div class="param">
  <p class="param-bit type">
    <b>Type:</b>
    <span class="value"><i>Boolean</i></span>
  </p>
  <p class="param-bit default">
    <b>Default:</b>
    <span class="value"><code><span class="literal">false</span></code></span>
  </p>
</div>

<p>Arranges items horizontally instead of vertically.</p>

<p>Set a <a href="../layout-modes.html#horizontal-layouts">container height</a> for horizontal layouts.</p>

<div class="row example">
  <div class="cell example-code">
``` js
layoutMode: 'packery',
packery: {
  isHorizontal: true
}
```
  </div>
  <div class="cell demo">
    <div class="isotope js-isotope horizontal counting" data-isotope-options='{ "layoutMode": "packery", "packery": { "isHorizontal": true } }'>
      {{>mini-demo-items}}
    </div>
    <p class="edit"><a href="http://codepen.io/desandro/pen/AmpsD">Edit this example on CodePen</a></p>
  </div>
</div>


<h2>rowHeight</h2>

<div class="param">
  <p class="param-bit type">
    <b>Type:</b>
    <span class="value"><i>Number</i>, <i>Element</i>, or Selector <i>String</i></span>
  </p>
</div>

<p>Aligns items to the height of a row of a vertical grid.</p>

<div class="row example">
  <div class="cell example-code">
``` js
layoutMode: 'packery',
packery: {
  rowHeight: 60
}
```
  </div>
  <div class="cell demo">
    <div class="isotope js-isotope" data-isotope-options='{ "layoutMode": "packery", "packery": { "rowHeight": 60 } }'>
      {{>mini-demo-items}}
    </div>
    <p class="edit"><a href="http://codepen.io/desandro/pen/jhgef">Edit this example on CodePen</a></p>
  </div>
</div>

<p>If set to an <i>Element</i> or Selector <i>String</i>, Isotope will use the height of that element. See <a href="../options.html#element-sizing">Element sizing</a>. Setting <code>rowHeight</code> with element sizing is recommended if you are using media queries.</p>
